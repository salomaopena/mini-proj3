{"remainingRequest":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js!/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js??ref--13-0!/home/pena/python/mini-proj2/src/api/animal.service.js","dependencies":[{"path":"/home/pena/python/mini-proj2/src/api/animal.service.js","mtime":1618989262000},{"path":"/home/pena/python/mini-proj2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3BlbmEvcHl0aG9uL21pbmktcHJvajIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgQVBJX1VSTCBmcm9tICcuL2NvbmZpZy5qcyc7CmV4cG9ydCB2YXIgYW5pbWFsU2VydmljZSA9IHsKICBnZXRBbmltYWxzOiBmdW5jdGlvbiBnZXRBbmltYWxzKHRva2VuKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KEFQSV9VUkwsICIvYW5pbWFscyIpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICB0aHJvdyBFcnJvcihoYW5kbGVSZXNwb25zZXMocmVzcG9uc2Uuc3RhdHVzKSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgYWRkQW5pbWFsOiBmdW5jdGlvbiBhZGRBbmltYWwodG9rZW4sIHBheWxvYWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9hbmltYWxzIiksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDIuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZWRpdEFuaW1hbDogZnVuY3Rpb24gZWRpdEFuaW1hbCh0b2tlbiwgcGF5bG9hZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChBUElfVVJMLCAiL2FuaW1hbHMvIikuY29uY2F0KHBheWxvYWQuX2lkKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiUFVUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiB0b2tlbgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHBheWxvYWQpCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQzLnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIHJlbW92ZUFuaW1hbDogZnVuY3Rpb24gcmVtb3ZlQW5pbWFsKHRva2VuLCBpZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChBUElfVVJMLCAiL2FuaW1hbHMvIikuY29uY2F0KGlkKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiREVMRVRFIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiB0b2tlbgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0NC5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICB0aHJvdyBFcnJvcihoYW5kbGVSZXNwb25zZXMocmVzcG9uc2Uuc3RhdHVzKSk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpKCk7CiAgfQp9OwoKZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2VzKGNvZGUpIHsKICB2YXIgbWVzc2FnZSA9ICIiOwoKICBzd2l0Y2ggKGNvZGUpIHsKICAgIGNhc2UgNDAxOgogICAgICBtZXNzYWdlID0gIk7Do28gZXN0w6EgYXV0b3JpemFkbyBhIGV4ZWN1dGFyIGVzdGEgYcOnw6NvISI7CiAgICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgIG1lc3NhZ2UgPSAiTWVuc2FnZW0gZGVzY29uaGVjaWRhIjsKICAgICAgYnJlYWs7CiAgfQoKICByZXR1cm4gbWVzc2FnZTsKfQoKZXhwb3J0IGRlZmF1bHQgYW5pbWFsU2VydmljZTs="},{"version":3,"sources":["/home/pena/python/mini-proj2/src/api/animal.service.js"],"names":["API_URL","animalService","getAnimals","token","fetch","method","headers","response","ok","json","Error","handleResponses","status","addAnimal","payload","body","JSON","stringify","editAnimal","_id","removeAnimal","id","code","message"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,aAApB;AAEA,OAAO,IAAMC,aAAa,GAAG;AACrBC,EAAAA,UADqB,sBACVC,KADU,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDC,KAAK,WAAIJ,OAAJ,eAAuB;AAC/CK,gBAAAA,MAAM,EAAE,KADuC;AAE/CC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,mCAAiBH;AAFV;AAFsC,eAAvB,CADJ;;AAAA;AAClBI,cAAAA,QADkB;;AAAA,mBAQlBA,QAAQ,CAACC,EARS;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASPD,QAAQ,CAACE,IAAT,EATO;;AAAA;AAAA;;AAAA;AAAA,oBAWdC,KAAK,CAACC,eAAe,CAACJ,QAAQ,CAACK,MAAV,CAAhB,CAXS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAavB,GAd0B;AAgBrBC,EAAAA,SAhBqB,qBAgBXV,KAhBW,EAgBJW,OAhBI,EAgBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPV,KAAK,WAAIJ,OAAJ,eAAuB;AACjDK,gBAAAA,MAAM,EAAE,MADyC;AAEjDC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,mCAAiBH;AAFV,iBAFwC;AAMjDY,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,OAAf;AAN2C,eAAvB,CADE;;AAAA;AACxBP,cAAAA,QADwB;;AAAA,mBAS1BA,QAAQ,CAACC,EATiB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUfD,QAAQ,CAACE,IAAT,EAVe;;AAAA;AAAA;;AAAA;AAAA,oBAYtBC,KAAK,CAACC,eAAe,CAACJ,QAAQ,CAACK,MAAV,CAAhB,CAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc/B,GA9B0B;AAgCrBM,EAAAA,UAhCqB,sBAgCVf,KAhCU,EAgCHW,OAhCG,EAgCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACRV,KAAK,WAAIJ,OAAJ,sBAAuBc,OAAO,CAACK,GAA/B,GAAsC;AAChEd,gBAAAA,MAAM,EAAE,KADwD;AAEhEC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,mCAAiBH;AAFV,iBAFuD;AAMhEY,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,OAAf;AAN0D,eAAtC,CADG;;AAAA;AACzBP,cAAAA,QADyB;;AAAA,mBAS3BA,QAAQ,CAACC,EATkB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUhBD,QAAQ,CAACE,IAAT,EAVgB;;AAAA;AAAA;;AAAA;AAAA,oBAYvBC,KAAK,CAACC,eAAe,CAACJ,QAAQ,CAACK,MAAV,CAAhB,CAZkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAchC,GA9C0B;AAgDrBQ,EAAAA,YAhDqB,wBAgDRjB,KAhDQ,EAgDDkB,EAhDC,EAgDG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACLjB,KAAK,WAAIJ,OAAJ,sBAAuBqB,EAAvB,GAA6B;AACvDhB,gBAAAA,MAAM,EAAE,QAD+C;AAEvDC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,mCAAiBH;AAFV;AAF8C,eAA7B,CADA;;AAAA;AACtBI,cAAAA,QADsB;;AAAA,mBAQxBA,QAAQ,CAACC,EARe;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASbD,QAAQ,CAACE,IAAT,EATa;;AAAA;AAAA;;AAAA;AAAA,oBAWpBC,KAAK,CAACC,eAAe,CAACJ,QAAQ,CAACK,MAAV,CAAhB,CAXe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAa7B;AA7D0B,CAAtB;;AAiEP,SAASD,eAAT,CAAyBW,IAAzB,EAA+B;AAC7B,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQD,IAAR;AACE,SAAK,GAAL;AACEC,MAAAA,OAAO,GAAG,2CAAV;AACA;;AACF;AACEA,MAAAA,OAAO,GAAG,uBAAV;AACA;AANJ;;AAQA,SAAOA,OAAP;AACD;;AAED,eAAetB,aAAf","sourcesContent":["import API_URL from './config.js'\n\nexport const animalService = {\n  async getAnimals(token) {\n    let response = await fetch(`${API_URL}/animals`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async addAnimal(token, payload) {\n    const response = await fetch(`${API_URL}/animals`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    })\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async editAnimal(token, payload) {\n    const response = await fetch(`${API_URL}/animals/${payload._id}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n  \n  async removeAnimal(token, id) {\n    const response = await fetch(`${API_URL}/animals/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  }\n\n};\n\nfunction handleResponses(code) {\n  let message = \"\"\n  switch (code) {\n    case 401:\n      message = \"Não está autorizado a executar esta ação!\"\n      break;\n    default:\n      message = \"Mensagem desconhecida\"\n      break;\n  }\n  return message\n}\n\nexport default animalService;\n"]}]}