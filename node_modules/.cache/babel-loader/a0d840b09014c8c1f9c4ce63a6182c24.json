{"remainingRequest":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js!/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js??ref--13-0!/home/pena/python/mini-proj2/src/api/email.service.js","dependencies":[{"path":"/home/pena/python/mini-proj2/src/api/email.service.js","mtime":1618989262000},{"path":"/home/pena/python/mini-proj2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3BlbmEvcHl0aG9uL21pbmktcHJvajIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgQVBJX1VSTCBmcm9tICcuL2NvbmZpZy5qcyc7CmV4cG9ydCB2YXIgZW1haWxTZXJ2aWNlID0gewogIHNlbmRFbWFpbDogZnVuY3Rpb24gc2VuZEVtYWlsKHRva2VuLCBwYXlsb2FkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KEFQSV9VUkwsICIvZW1haWxzIiksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0LnNlbnQpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIHRocm93IEVycm9yKGhhbmRsZVJlc3BvbnNlcyhyZXNwb25zZS5zdGF0dXMpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfQp9OwoKZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2VzKGNvZGUpIHsKICB2YXIgbWVzc2FnZSA9ICIiOwoKICBzd2l0Y2ggKGNvZGUpIHsKICAgIGNhc2UgNDAxOgogICAgICBtZXNzYWdlID0gIk7Do28gZXN0w6EgYXV0b3JpemFkbyBhIGV4ZWN1dGFyIGVzdGEgYcOnw6NvISI7CiAgICAgIGJyZWFrOwoKICAgIGRlZmF1bHQ6CiAgICAgIG1lc3NhZ2UgPSAiTWVuc2FnZW0gZGVzY29uaGVjaWRhIjsKICAgICAgYnJlYWs7CiAgfQoKICByZXR1cm4gbWVzc2FnZTsKfQoKZXhwb3J0IGRlZmF1bHQgZW1haWxTZXJ2aWNlOw=="},{"version":3,"sources":["/home/pena/python/mini-proj2/src/api/email.service.js"],"names":["API_URL","emailService","sendEmail","token","payload","fetch","method","headers","body","JSON","stringify","response","ok","json","Error","handleResponses","status","code","message"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,aAApB;AAEA,OAAO,IAAMC,YAAY,GAAG;AACpBC,EAAAA,SADoB,qBACVC,KADU,EACHC,OADG,EACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACPC,KAAK,WAAIL,OAAJ,cAAsB;AAChDM,gBAAAA,MAAM,EAAE,MADwC;AAEhDC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT;AAEP,mCAAiBJ;AAFV,iBAFuC;AAMhDK,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAN0C,eAAtB,CADE;;AAAA;AACxBO,cAAAA,QADwB;;AAAA,mBAS1BA,QAAQ,CAACC,EATiB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUfD,QAAQ,CAACE,IAAT,EAVe;;AAAA;AAAA;;AAAA;AAAA,oBAYtBC,KAAK,CAACC,eAAe,CAACJ,QAAQ,CAACK,MAAV,CAAhB,CAZiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc/B;AAfyB,CAArB;;AAmBP,SAASD,eAAT,CAAyBE,IAAzB,EAA+B;AAC7B,MAAIC,OAAO,GAAG,EAAd;;AACA,UAAQD,IAAR;AACE,SAAK,GAAL;AACEC,MAAAA,OAAO,GAAG,2CAAV;AACA;;AACF;AACEA,MAAAA,OAAO,GAAG,uBAAV;AACA;AANJ;;AAQA,SAAOA,OAAP;AACD;;AAED,eAAejB,YAAf","sourcesContent":["import API_URL from './config.js'\n\nexport const emailService = {\n  async sendEmail(token, payload) {\n    const response = await fetch(`${API_URL}/emails`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    })\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n};\n\nfunction handleResponses(code) {\n  let message = \"\"\n  switch (code) {\n    case 401:\n      message = \"Não está autorizado a executar esta ação!\"\n      break;\n    default:\n      message = \"Mensagem desconhecida\"\n      break;\n  }\n  return message\n}\n\nexport default emailService;\n"]}]}