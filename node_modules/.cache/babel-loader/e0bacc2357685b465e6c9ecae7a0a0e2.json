{"remainingRequest":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js!/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js??ref--13-0!/home/pena/python/mini-proj2/src/api/quiz.service.js","dependencies":[{"path":"/home/pena/python/mini-proj2/src/api/quiz.service.js","mtime":1618989262000},{"path":"/home/pena/python/mini-proj2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3BlbmEvcHl0aG9uL21pbmktcHJvajIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgQVBJX1VSTCBmcm9tICcuL2NvbmZpZy5qcyc7CmV4cG9ydCB2YXIgcXVpelNlcnZpY2UgPSB7CiAgZ2V0UXVpenplczogZnVuY3Rpb24gZ2V0UXVpenplcyh0b2tlbikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCIiLmNvbmNhdChBUElfVVJMLCAiL3F1aXp6ZXMiKSwgewogICAgICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiB0b2tlbgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGFkZFF1aXo6IGZ1bmN0aW9uIGFkZFF1aXoodG9rZW4sIHBheWxvYWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9xdWl6emVzIiksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDIuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0sCiAgZWRpdFF1aXo6IGZ1bmN0aW9uIGVkaXRRdWl6KHRva2VuLCBwYXlsb2FkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goIiIuY29uY2F0KEFQSV9VUkwsICIvcXVpenplcy8iKS5jb25jYXQocGF5bG9hZC5faWQpLCB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJQVVQiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocGF5bG9hZCkKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDMuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgcmVtb3ZlUXVpejogZnVuY3Rpb24gcmVtb3ZlUXVpeih0b2tlbiwgaWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiIi5jb25jYXQoQVBJX1VSTCwgIi9xdWl6emVzLyIpLmNvbmNhdChpZCksIHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIkRFTEVURSIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogdG9rZW4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwoKICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDQuc2VudCk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgdGhyb3cgRXJyb3IoaGFuZGxlUmVzcG9uc2VzKHJlc3BvbnNlLnN0YXR1cykpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0KfTsKCmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlcyhjb2RlKSB7CiAgdmFyIG1lc3NhZ2UgPSAiIjsKCiAgc3dpdGNoIChjb2RlKSB7CiAgICBjYXNlIDQwMToKICAgICAgbWVzc2FnZSA9ICJOw6NvIGVzdMOhIGF1dG9yaXphZG8gYSBleGVjdXRhciBlc3RhIGHDp8OjbyEiOwogICAgICBicmVhazsKCiAgICBjYXNlIDQwOToKICAgICAgbWVzc2FnZSA9ICJKw6EgZXhpc3RlIHVtIHV0aWxpemFkb3IgY29tIGVzdGUgdXNlcm5hbWUhIjsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgbWVzc2FnZSA9ICJNZW5zYWdlbSBkZXNjb25oZWNpZGEiOwogICAgICBicmVhazsKICB9CgogIHJldHVybiBtZXNzYWdlOwp9CgpleHBvcnQgZGVmYXVsdCBxdWl6U2VydmljZTs="},{"version":3,"sources":["/home/pena/python/mini-proj2/src/api/quiz.service.js"],"names":["API_URL","quizService","getQuizzes","token","fetch","method","headers","response","ok","json","Error","handleResponses","status","addQuiz","payload","body","JSON","stringify","editQuiz","_id","removeQuiz","id","code","message"],"mappings":"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","sourcesContent":["import API_URL from './config.js'\n\nexport const quizService = {\n  async getQuizzes(token) {\n    const response = await fetch(`${API_URL}/quizzes`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async addQuiz(token, payload) {\n    const response = await fetch(`${API_URL}/quizzes`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    })\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async editQuiz(token, payload) {\n    const response = await fetch(`${API_URL}/quizzes/${payload._id}`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      },\n      body: JSON.stringify(payload)\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  },\n\n  async removeQuiz(token, id) {\n    const response = await fetch(`${API_URL}/quizzes/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n      }\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw Error(handleResponses(response.status));\n    }\n  }\n\n};\n\nfunction handleResponses(code) {\n  let message = \"\"\n  switch (code) {\n    case 401:\n      message = \"Não está autorizado a executar esta ação!\"\n      break;\n    case 409:\n      message = \"Já existe um utilizador com este username!\"\n      break;\n    default:\n      message = \"Mensagem desconhecida\"\n      break;\n  }\n  return message\n}\n\nexport default quizService;\n"]}]}