{"remainingRequest":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js!/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js??ref--13-0!/home/pena/python/mini-proj2/src/store/quizzes/quiz.module.js","dependencies":[{"path":"/home/pena/python/mini-proj2/src/store/quizzes/quiz.module.js","mtime":1618989262000},{"path":"/home/pena/python/mini-proj2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pena/python/mini-proj2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pena/python/mini-proj2/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvaG9tZS9wZW5hL3B5dGhvbi9taW5pLXByb2oyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9wZW5hL3B5dGhvbi9taW5pLXByb2oyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKCnZhciBfYWN0aW9ucywgX211dGF0aW9uczsKCmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgcXVpelNlcnZpY2UgZnJvbSAiQC9hcGkvcXVpei5zZXJ2aWNlIjsKaW1wb3J0IHsgLy8gQWN0aW9ucwpGRVRDSF9RVUlaWkVTLCBBRERfUVVJWiwgRURJVF9RVUlaLCBSRU1PVkVfUVVJWiAvLyBNdXRhdGlvbnMgCiwgU0VUX1FVSVpaRVMsIFNFVF9NRVNTQUdFIH0gZnJvbSAiLi9xdWl6LmNvbnN0YW50cyI7CnZhciBzdGF0ZSA9IHsKICBxdWl6emVzOiBbXSwKICBtZXNzYWdlOiAiIgp9Owp2YXIgZ2V0dGVycyA9IHsKICBnZXRRdWl6emVzOiBmdW5jdGlvbiBnZXRRdWl6emVzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUucXVpenplczsKICB9LAogIGdldFF1aXpCeUlkOiBmdW5jdGlvbiBnZXRRdWl6QnlJZChzdGF0ZSkgewogICAgcmV0dXJuIGZ1bmN0aW9uIChpZCkgewogICAgICByZXR1cm4gc3RhdGUucXVpenplcy5maW5kKGZ1bmN0aW9uIChxdWl6KSB7CiAgICAgICAgcmV0dXJuIHF1aXouX2lkID09PSBpZDsKICAgICAgfSk7CiAgICB9OwogIH0sCiAgZ2V0TWVzc2FnZTogZnVuY3Rpb24gZ2V0TWVzc2FnZShzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLm1lc3NhZ2U7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IChfYWN0aW9ucyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIEZFVENIX1FVSVpaRVMsIGZ1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgdmFyIGNvbW1pdCwgcm9vdFN0YXRlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdCwgcm9vdFN0YXRlID0gX3JlZi5yb290U3RhdGU7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICAgICAgICBxdWl6U2VydmljZS5nZXRRdWl6emVzKHJvb3RTdGF0ZS5hdXRoLnRva2VuKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbW1pdChTRVRfUVVJWlpFUywgcmVzLmJvZHkpOwogICAgICAgICAgICAgICAgcmVzb2x2ZShyZXMpOwogICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICAgIGNvbW1pdChTRVRfTUVTU0FHRSwgZXJyLm1lc3NhZ2UpOwogICAgICAgICAgICAgICAgcmVqZWN0KGVycik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIEFERF9RVUlaLCBmdW5jdGlvbiAoX3JlZjMsIHBheWxvYWQpIHsKICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0LAogICAgICByb290U3RhdGUgPSBfcmVmMy5yb290U3RhdGU7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIHF1aXpTZXJ2aWNlLmFkZFF1aXoocm9vdFN0YXRlLmF1dGgudG9rZW4sIHBheWxvYWQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBjb21taXQoU0VUX01FU1NBR0UsICJzdWNlc3NvISIpOwogICAgICByZXNvbHZlKHJlcy5ib2R5KTsKICAgIH0sIGZ1bmN0aW9uIChlcnIpIHsKICAgICAgY29tbWl0KFNFVF9NRVNTQUdFLCBlcnIubWVzc2FnZSk7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIEVESVRfUVVJWiwgZnVuY3Rpb24gKF9yZWY0LCBwYXlsb2FkKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdCwKICAgICAgcm9vdFN0YXRlID0gX3JlZjQucm9vdFN0YXRlOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBxdWl6U2VydmljZS5lZGl0UXVpeihyb290U3RhdGUuYXV0aC50b2tlbiwgcGF5bG9hZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIGNvbW1pdChTRVRfTUVTU0FHRSwgInN1Y2Vzc28hIik7CiAgICAgIHJlc29sdmUocmVzKTsKICAgIH0sIGZ1bmN0aW9uIChlcnIpIHsKICAgICAgY29tbWl0KFNFVF9NRVNTQUdFLCBlcnIubWVzc2FnZSk7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn0pLCBfZGVmaW5lUHJvcGVydHkoX2FjdGlvbnMsIFJFTU9WRV9RVUlaLCBmdW5jdGlvbiAoX3JlZjUsIGlkKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWY1LmNvbW1pdCwKICAgICAgcm9vdFN0YXRlID0gX3JlZjUucm9vdFN0YXRlOwogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICBxdWl6U2VydmljZS5yZW1vdmVRdWl6KHJvb3RTdGF0ZS5hdXRoLnRva2VuLCBpZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIGNvbW1pdChTRVRfTUVTU0FHRSwgInN1Y2Vzc28hIik7CiAgICAgIHJlc29sdmUocmVzKTsKICAgIH0sIGZ1bmN0aW9uIChlcnIpIHsKICAgICAgY29tbWl0KFNFVF9NRVNTQUdFLCBlcnIubWVzc2FnZSk7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn0pLCBfYWN0aW9ucyk7CmV4cG9ydCB2YXIgbXV0YXRpb25zID0gKF9tdXRhdGlvbnMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9tdXRhdGlvbnMsIFNFVF9RVUlaWkVTLCBmdW5jdGlvbiAoc3RhdGUsIHF1aXp6ZXMpIHsKICBzdGF0ZS5xdWl6emVzID0gcXVpenplczsKfSksIF9kZWZpbmVQcm9wZXJ0eShfbXV0YXRpb25zLCBTRVRfTUVTU0FHRSwgZnVuY3Rpb24gKHN0YXRlLCBtZXNzYWdlKSB7CiAgc3RhdGUubWVzc2FnZSA9IG1lc3NhZ2U7Cn0pLCBfbXV0YXRpb25zKTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/home/pena/python/mini-proj2/src/store/quizzes/quiz.module.js"],"names":["quizService","FETCH_QUIZZES","ADD_QUIZ","EDIT_QUIZ","REMOVE_QUIZ","SET_QUIZZES","SET_MESSAGE","state","quizzes","message","getters","getQuizzes","getQuizById","id","find","quiz","_id","getMessage","actions","commit","rootState","Promise","resolve","reject","auth","token","then","res","body","err","payload","addQuiz","editQuiz","removeQuiz","mutations","namespaced"],"mappings":"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","sourcesContent":["import quizService from \"@/api/quiz.service\";\nimport { \n  // Actions\n  FETCH_QUIZZES,\n  ADD_QUIZ,\n  EDIT_QUIZ,\n  REMOVE_QUIZ,\n  // Mutations \n  SET_QUIZZES,\n  SET_MESSAGE \n} from \"./quiz.constants\";\n\nconst state = {\n  quizzes: [],\n  message: \"\"\n};\n\nconst getters = {\n  getQuizzes: state => state.quizzes,\n  getQuizById: state => id => {\n    return state.quizzes.find(quiz => quiz._id === id)\n  },\n  getMessage: state => state.message\n};\n\nconst actions = {\n  [FETCH_QUIZZES]: async ({ commit, rootState }) => {\n    return new Promise((resolve, reject) => {\n      quizService.getQuizzes(rootState.auth.token)\n        .then(\n          res => {\n            commit(SET_QUIZZES, res.body);\n            resolve(res)\n          },\n          err => {\n            commit(SET_MESSAGE, err.message)\n            reject(err)\n          }\n        );\n    });\n  },\n  [ADD_QUIZ]: ({ commit, rootState }, payload) => {\n    return new Promise((resolve, reject) => {\n      quizService.addQuiz(rootState.auth.token, payload)\n        .then(\n          res => {\n            commit(SET_MESSAGE, \"sucesso!\");\n            resolve(res.body) \n          },\n          err => {\n            commit(SET_MESSAGE, err.message)\n            reject(err)\n          }\n        );\n    });\n  },\n  [EDIT_QUIZ]: ({ commit, rootState }, payload) => {\n    return new Promise((resolve, reject) => {\n      quizService.editQuiz(rootState.auth.token, payload)\n        .then(\n          res => {\n            commit(SET_MESSAGE, \"sucesso!\");\n            resolve(res)\n          },\n          err => {\n            commit(SET_MESSAGE, err.message)\n            reject(err)\n          }\n        );\n    });\n  },\n  [REMOVE_QUIZ]: ({ commit, rootState }, id) => {\n    return new Promise((resolve, reject) => {\n      quizService.removeQuiz(rootState.auth.token, id)\n        .then(\n          res => {\n            commit(SET_MESSAGE, \"sucesso!\");\n            resolve(res)\n          },\n          err => {\n            commit(SET_MESSAGE, err.message)\n            reject(err)\n          }\n        );\n      });\n    }\n  };\n\nexport const mutations = {\n  [SET_QUIZZES]: (state, quizzes) => {\n    state.quizzes = quizzes;\n  },\n  [SET_MESSAGE]: (state, message) => {\n    state.message = message;\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}